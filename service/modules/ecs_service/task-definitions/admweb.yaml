- name: app
  image: "${app_docker_repository}:${app_image_tag}"
  essential: true
  portMappings:
    - containerPort: ${app_container_port}
      hostPort: ${app_container_port}
      protocol: tcp
  environment:
    - name: ENVIRONMENT
      value: "${environment}"
    - name: NODE_ENV
      value: production
    - name: FLASK_APP
      value: "./run.py"
    - name: FLASK_ENV
      value: production
    - name: FLASK_DEBUG
      value: "${flask_debug}"
    - name: DB_USER
      value: "${db_username}"
    - name: DB_NAME
      value: "${db_name}"
    - name: DB_PORT
      value: "${db_port}"
    - name: DB_HOST
      value: "${db_host}"
    - name: REDIS_HOST
      value: "${redis_host}"
    - name: REDIS_PORT
      value: "${redis_port}"
    - name: REDIS_MODE
      value: "${redis_mode}"
    - name: APP_PORT
      value: "${app_container_port}"
  secrets:
    - name: DB_PASSWORD
      valueFrom: "${db_password_secrets_arn}"
  logConfiguration:
    logDriver: awslogs
    options:
      awslogs-region: "${aws_region}"
      awslogs-group: "${app_log_group}"
      awslogs-stream-prefix: "app-"
- name: nginx
  image: "${nginx_docker_repository}:${nginx_image_tag}"
  essential: true
  portMappings:
    - containerPort: ${nginx_container_port}
      hostPort: 80
      protocol: tcp
  environment:
    - name: APP_HOST
      value: "127.0.0.1"
    - name: APP_PORT
      value: "${app_container_port}"
  dependsOn:
    - containerName: "app"
      condition: "START"
  logConfiguration:
    logDriver: awslogs
    options:
      awslogs-region: "${aws_region}"
      awslogs-group: "${nginx_log_group}"
      awslogs-stream-prefix: "nginx-"
